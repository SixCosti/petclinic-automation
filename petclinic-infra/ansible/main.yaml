---
- hosts: app
  become: yes
  vars:
    db_host: "{{ groups['db'][0] }}"  # This references the first host in the "db" group
  tasks:
    - name: Update and install required packages
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      with_items:
        - curl
        - apt-transport-https
        - ca-certificates

    - name: Install K3s
      shell: |
        curl -sfL https://get.k3s.io | sh - 
      args:
        executable: /bin/bash

    - name: Ensure the correct permissions on the kubeconfig file
      file:
        path: /etc/rancher/k3s/k3s.yaml
        mode: '0644'  # Set permissions so it's readable by all users
      # when: ansible_facts['os_family'] == "Debian"

    - name: Ensure /root/.kube directory exists
      file:
        path: /root/.kube
        state: directory
        mode: '0755'

    - name: Create K3s kubeconfig symlink for root access
      file:
        src: /etc/rancher/k3s/k3s.yaml
        dest: /root/.kube/config
        state: link

      # Workaround of passing the db endpoint to the backend cluster, needs upgrading to a configMap
      # - name: Debug DB_HOST
      #   debug:
      #     msg: "The database host is {{ db_host }}"

    - name: Apply deployment.yaml using kubectl
      shell: |
        export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
        sed -i '/- name: DB_HOST/{n;s/value: ".*"/value: "{{ db_host }}"/}' /home/admin/deployment.yaml
        kubectl apply -f /home/admin/deployment.yaml
      args:
        executable: /bin/bash